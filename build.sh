#!/bin/bash

# So that configtxgen tool will be able to locate the configtx.yaml file
export FABRIC_CFG_PATH=${PWD}

# Functionalities
cleanUp() {
    echo ""
    echo "Cleanup Process... \n"
    
    # Remove Credential Stores
    rm -rf /tmp/thanksapp-* thanksapp

    # Remove Docker Images not generated by docker-compose command
    docker rm -f -v `docker ps -a --no-trunc | grep "thanksapp" | cut -d ' ' -f 1` 2>/dev/null
    docker rmi `docker images --no-trunc | grep "thanksapp" | cut -d ' ' -f 1` 2>/dev/null

    echo "Finished Cleaning..."
}

buildUp() {
    echo ""
    echo "Building..."
    
    # Dep Ensure
    time dep ensure -v

    # Remove Docker Images not generated by docker-compose command
    go build

    echo "Finished Building..."
}

invokeDocker() {
    echo ""
    echo "Starting Environment..."
    
    # Fire up docker
    docker-compose up --force-recreate -d

    echo "Finished Building..."
}

destroyDocker() {
    echo ""
    echo "Destroying Environment..."
    
    # Destroy Environment
    docker-compose down

    echo "Destroyed..."
}

startApp() {
    echo ""
    echo "Starting Application..."
    
    # Fire Binary
    ./thanksapp
}

# Display User Choices
echo "================================================================="
echo "|                         THANKS APP                            |"
echo "================================================================="
echo "|"
echo "|   You can choose from 7 numbers for building process" 
echo "|   of this application."
echo "|   ----------------------------------------------------"
echo "|"
echo "|   These are the following choices in building this application:"
echo "|       1. Clean" 
echo "|           * Removes credential stores produced by app. "
echo "|           * Shuts Down Network. "
echo "|           * Remove Docker Containers. "
echo "|"
echo "|       2. Build" 
echo "|           * Synchronize vendor of SDK "
echo "|           * Create Binary file for the Application "
echo "|"
echo "|       3. Initialize Container" 
echo "|           * Invoke Docker containers "
echo "|"
echo "|       4. Run" 
echo "|           * Start the Application "
echo "|"
echo "|       5. Destroy Container" 
echo "|           * Removes all container produced by Docker"
echo "|"
echo "|       6. All - Clean invoke of network" 
echo "|           * Executes Clean(1), Build(2), Container(3), Run(4)"
echo "|"
echo "|       7. Dev - Partial invoke of network" 
echo "|           * Executes Build(2), Run(4)"
echo "|"
echo "|   ----------------------------------------------------"
echo "|"

# Ask for user prompt
while true; do
    read -p "|   Please select the number of desired operation: " opt
    case $opt in
        [1]* ) cleanUp ; break ;;
        [2]* ) buildUp ; break ;;
        [3]* ) invokeDocker ; break ;;
        [4]* ) startApp ;  break ;;
        [5]* ) destroyDocker ; break;;
        [6]* ) cleanUp && buildUp && invokeDocker && startApp ; break;;
        [7]* ) buildUp && startApp ; break;;
        * ) echo "|   Inputted value is not valid! ";;
    esac
done
